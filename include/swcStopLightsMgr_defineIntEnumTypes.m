Simulink.defineIntEnumType( 'CANBrakeLampStatus', ...
   {'CANBRAKELAMPSTATUS_OFF','CANBRAKELAMPSTATUS_ON'}, ...
   [0 1], ...
   'DefaultValue', 'CANBRAKELAMPSTATUS_OFF', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'CANStopLampDiagnosis', ...
   {'CANSTOPLAMPDIAGNOSIS_NO_FAILURE','CANSTOPLAMPDIAGNOSIS_FAILURE','CANSTOPLAMPDIAGNOSIS_UNAVAILABLE'}, ...
   [1 2 3], ...
   'DefaultValue', 'CANSTOPLAMPDIAGNOSIS_NO_FAILURE', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'Failure', ...
   {'FAILURE_NO','FAILURE_YES','FAILURE_UNAVAILABLE'}, ...
   [0 1 255], ...
   'DefaultValue', 'FAILURE_NO', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'FailureAlert', ...
   {'FAILURE_ALERT_NO','FAILURE_ALERT_YES','FAILURE_ALERT_UNAVAILABLE'}, ...
   [0 1 255], ...
   'DefaultValue', 'FAILURE_ALERT_NO', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'IOControlStopLightsRequest', ...
   {'IO_CONTROL_STOPLIGHTS_REQUEST_OFF','IO_CONTROL_STOPLIGHTS_REQUEST_ON'}, ...
   [0 1], ...
   'DefaultValue', 'IO_CONTROL_STOPLIGHTS_REQUEST_OFF', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'LightSourceFailureReason', ...
   {'LIGHT_SOURCE_FAILURE_REASON_NONE','LIGHT_SOURCE_FAILURE_REASON_SC_TO_GND','LIGHT_SOURCE_FAILURE_REASON_SC_TO_VBAT','LIGHT_SOURCE_FAILURE_REASON_OPEN_CIRCUIT','LIGHT_SOURCE_FAILURE_REASON_OVER_TEMP','LIGHT_SOURCE_FAILURE_REASON_SC_TO_GND_OR_OC','LIGHT_SOURCE_FAILURE_REASON_SC_TO_VBAT_OR_OC'}, ...
   [0 1 2 3 4 5 6], ...
   'DefaultValue', 'LIGHT_SOURCE_FAILURE_REASON_NONE', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'PowerAuthorizationStatus', ...
   {'POWERAUTHORIZATIONSTATUS_NOT_AUTHORIZED','POWERAUTHORIZATIONSTATUS_AUTHORIZED','POWERAUTHORIZATIONSTATUS_UNDEFINED','POWERAUTHORIZATIONSTATUS_CUTOFFPENDING'}, ...
   [0 1 255 2], ...
   'DefaultValue', 'POWERAUTHORIZATIONSTATUS_NOT_AUTHORIZED', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'SpeedSignT', ...
   {'SPEED_SIGN_T_NULL_SPEED_OR_LESS_THAN_MIN_DETECTABLE','SPEED_SIGN_T_POSITIVE_VEHICLE_SPEED_FORWARD_MOTION','SPEED_SIGN_T_NEGATIVE_VEHICLE_SPEED_REVERSE_MOTION','SPEED_SIGN_T_UNAVAILABLE'}, ...
   [0 1 2 3], ...
   'DefaultValue', 'SPEED_SIGN_T_NULL_SPEED_OR_LESS_THAN_MIN_DETECTABLE', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'SpeedSupposedStateT', ...
   {'SPEEDSUPPOSEDSTATE_STANDSTILL','SPEEDSUPPOSEDSTATE_UNAVAILABLE','SPEEDSUPPOSEDSTATE_MOVING'}, ...
   [1 0 2], ...
   'DefaultValue', 'SPEEDSUPPOSEDSTATE_STANDSTILL', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'StopLightStateID', ...
   {'STOP_LIGHT_STATE_ID_OFF','STOP_LIGHT_STATE_ID_ON'}, ...
   [0 1], ...
   'DefaultValue', 'STOP_LIGHT_STATE_ID_OFF', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'StopLightsPatternID', ...
   {'STOP_LIGHTS_PATTERN_ID_OFF','STOP_LIGHTS_PATTERN_ID_ON','STOP_LIGHTS_PATTERN_ID_WARNING'}, ...
   [0 1 2], ...
   'DefaultValue', 'STOP_LIGHTS_PATTERN_ID_OFF', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'UsageAction', ...
   {'USAGEACTION_IMPULSE_COMMAND','USAGEACTION_OPEN_SESSION','USAGEACTION_CLOSE_SESSION'}, ...
   [0 1 2], ...
   'DefaultValue', 'USAGEACTION_CLOSE_SESSION', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

Simulink.defineIntEnumType( 'ValueState', ...
   {'VALUE_STATE_UNAVAILABLE','VALUE_STATE_INVALID','VALUE_STATE_VALID'}, ...
   [0 2 1], ...
   'DefaultValue', 'VALUE_STATE_VALID', ...
   'StorageType', 'uint8', ...
   'HeaderFile', 'Rte_Type.h', ...
   'AddClassNameToEnumNames', false);

